sim<-matrix(rnorm(nosim*n),nosim)
head(sim)
tail(sim)
sim<-matrix(rnorm(nosim),nosim)
head(sim)
tail(sim)
sim<-matrix(rnorm(nosim))
tail(sim)
sim<-matrix(rnorm(nosim*n))
tail(sim)
sim<-matrix(rnorm(nosim*n),nosim)
library(UsingR)
install.packages("UsingR")
lapply(trees, mean)
rm(list = ls())
swirl()
dice_sqr
ex2_fair<- sum(dice_sqr*dice_fair)
ex2_fair-3.5
ex2_fair-3.5^2
sum(dice*dice_high)-edh^2
sum(dice_sqr*dice_high)-edh^2
sd(sapply(matrix(rnorm(10000),1000),1,mean))
sd(apply(matrix(rnorm(10000),1000),1,mean))
play()
sx<- rnorm(matrix(10000,1000))
head(sx)
sx<- matrix(rnorm(10000),1000))
sx<- matrix(rnorm(10000),1000)
head(sx)
nxt()
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
play()
sd(apply(matrix(rnorm(10000 ,mean = 0, sd = sqrt(1/12)),1000),1,mean))
nxt()
sd(apply(matrix(rpois(10,4),10),1,mean))
sd(apply(rpois(10,4),1,mean))
apply(rpois(10,4),1,mean)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/2*sqrt(10)
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)*(0.8)^3*(0.2)*2
choose(5,3)*(0.8)^3*(0.2)^2
choose(5,3)*(0.8)^3*(0.2)^2+choose(5,4)*(0.8)^4*(0.2)^1+choose(5,5)*(0.8)^5*(0.2)^0
pbiom
pbinom(q = 2, size= 5, prob = .8)
pbinom(q = 2, size= 5, prob = .8,lower.tail=FALSE)
qnorm(p=0.10)
0
qnorm(p =0.975,mean = 3, sd = 2)
3+(1.96*2)
pnorm(q =1200, mean = 1020,sd = 50,lower.tail = FALSE)
pnorm(q =(1200-1020)/50, mean = 0,sd = 1,lower.tail = FALSE)
qnorm(p=.75,mean = 1020,sd = 50,lower.tail = TRUE)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
play()
qnorm(.53)
pnorm(.53)
pnorm(qnorm(.53))
nxt()
ppois(q =3,lambda = 2.5*4,lower.tail = TRUE,log.p = FALSE)
pbinom(q =5 , size = 1000, prob = .01)
ppois(q =5, lambda = 1000*0.01)
coinPlot(10)
play()
coinPlot
nxt()
coinPlot(10000)
qnorm(p=0.975)
qnorm(p=0.95)
.6+c(1,-1)* qnorm(.975)*sqrt(.6(1-.6)/100)
0.6+c(1,-1)* qnorm(.975)*sqrt(.6(1-.6)/100)
0.6+ c(1,-1)* qnorm(.975)*sqrt(0.6(1-0.6)/100)
0.6+ c(1,-1)*( qnorm(.975)*sqrt(0.6(1-0.6)/100))
qnorm(p=0.975)
0.6+ c(1,-1)*( qnorm(.975)*sqrt(0.6*(1-0.6)/100))
0.6+ c(1,-1)* qnorm(.975)*sqrt(0.6*(1-0.6)/100)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,10)
binom.test(60,100)
binom.test(60,100)$conf
binom.test(60,100)$conf.int
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb =5/94.32
lamb <-5/94.32
lamb <-5/94.32
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(lamb)$conf
poisson.test(5,94.32)$conf
coinPlot(10)
coinPlot(10000)
qnorm(p =0.95)
0.6+ c(-1,1)* qnorm(.975)*sqrt((0.6*(1-0.6))/100)
0.6+ c(-1,1)* qnorm(.975)*sqrt((0.6*.4/100)
)
0.6+ c(-1,1)* qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)$conf.int
play()
mywald
nxt()
mywalt(.2)
mywald(.2)
ACCompar(20)
lamb<-5/94.32
lamb+c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)
poisson.test(5,94.32)$conf
pnorm(.05,100,10)*100
round(pnorm(.05,100,10)*100,3)
qnorm(p =0.05,100,10)
qnorm(p =0.05,100,10,lower.tail = FALSE)
punif(0.51)
pnorm(q =70, mean = 80,sd)
pnorm(q =70, mean = 80,sd=10)
qnorm(p=0.95,mean = 1,100,sd=75)
qnorm(p=0.975,mean = 1,100,sd=75)
qnorm(p=0.95,mean = 1,100,sd=75/sqrt(100))
pbinom(5,5,0.5)+pbinom(4,5,0.5)
ppois(q=14,15,10/sqrt(100))-ppois(q=16,15,10/sqrt(100))
qnorm(p=0.95,mean = 1100,sd=75)
qnorm(p=0.95,mean = 1100,sd=75/sqrt(100))
pbinom(3,5,0.5,lower.tail = FALSE)
ppois(13,15,lower.tail = FALSE)-ppois(16,15,lower.tail = TRUE)
ppois(13,15*100*24,lower.tail = FALSE)-ppois(16,15*100*24,lower.tail = TRUE)
pnorm(0.5,0.5,1/12)
ppois(10,5*3)
rm(list = ls())
data("sleep")
head(sleep)
tail(sleep)
g <- ggplot(sleep, aes(x = group, y = extra, group = factor(ID)))
g <- g + geom_line(size = 1, aes(colour = ID)) + geom_point(size =10, pch = 21, fill = "salmon", alpha = .5)
g
data("mtcars")
head(mtcars)
t.test(mtcars$mpg)
qt(0.95,df = 8)
t.test(mtcars$mpg[mtcars$cyl==4],mtcars$mpg[mtcars$cyl==6], paired = TRUE)
mtcars$mpg[mtcars$cyl==4]
mtcars$mpg[mtcars$cyl==6]
t.test(mtcars$mpg[mtcars$cyl==4],mtcars$mpg[mtcars$cyl==6], paired = FALSE,var.equal = TRUE)
t.test(mtcars$mpg[mtcars$cyl==4],mtcars$mpg[mtcars$cyl==6],var.equal = TRUE)
baseline<-as.vector(c(140,138,150,148,135))
week2<-as.vector(c(132,135,151,146,130))
t.test(week2, baseline,paired = TRUE)
t.test(baseline, week2,paired = TRUE)
1100+c(-1,1)*qt(.975,8)*30/sqrt(9)
binom.test(3,4)
poisson.test(10,1787/100)
poisson.test(10,(1787/100)*100)
poisson.test(10,1787*0.01)
1100+c(-1,1)*qt(.975,8)*30/sqrt(9)
rm(list = ls())
library(swirl)
praveenjoseph42@gmail.com
swirl()
play()
myplot
nxt()
mplot(34)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(.95)
paly()
play()
z
nxt()
pnorm(q=30+z, mean = 30,lower.tail = FALSE)
pnorm(q=30+z, mean = 32,lower.tail = FALSE)
pnorm(q=30+z, mean = 32,sd =1,lower.tail = FALSE)
pnorm(q=30+z*2, mean = 32,sd =2,lower.tail = FALSE)
power.t.test(n=16,delta = 2/4,sd = 1,type = "one.sample",alt="one.sided")$power
power.t.test(n=16,delta = 2,sd = 4,type = "one.sample",alt="one.sided")$power
power.t.test(n=16,delta = 100,sd = 200,type = "one.sample",alt="one.sided")$power
power.t.test(n=16,delta = 100,sd = 200,type = "one.sample",alt="one.sided")$n
power.t.test(n=16,delta = 2/4,sd = 1,type = "one.sample",alt="one.sided")$n
power.t.test(power = .8,delta = 2/4,sd = 1,type = "one.sample",alt="one.sided")$n
power.t.test(power = .8,delta = 2,sd = 4,type = "one.sample",alt="one.sided")$n
power.t.test(power = .8,delta = 100,sd = 200,type = "one.sample",alt="one.sided")$n
power.t.test(power = .8,delta = 100,sd = 200,type = "one.sample",alt="one.sided")$n
power.t.test(power = .8, n=26, sd=1, type = "one.sample", alt =
| "one.sided")$delta.
power.t.test(power = .8, n=26, sd=1, type = "one.sample", alt ="one.sided")$delta
power.t.test(power = .8, n=27, sd=1, type = "one.sample", alt ="one.sided")$delta
head(pValues)
sum(pValues<0.05)
sum(p.adjust(pValues,method = "bonferroni"))
sum(p.adjust(pValues,method="bonferroni") < 0.05)
sum(p.adjust(pValues,method="BH") < 0.05)
tail(trueStatus)
table(pValues<.05,trueStatus)
table(pValues2<.05,trueStatus)
table(pValues2<.05,trueStatus)
24/500
table(p.adjuspValues2<.05,trueStatus)
table(pValues2<.05,trueStatus)
table(p.adjust(pValues2,method="bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2,method="BH") < 0.05, trueStatus)
table(p.adjust(pValues2,method="BH") < 0.05, trueStatus)
sum(1:6)/6
print(g2)
head(sh)
nh
median(resampledMeans)
edian(resampledMedians)
median(resampledMedians)
median(sh)
sam<-sample(x = sh,size = nh*B,replace = TRUE)
sam<-sample(x = fh,size = nh*B,replace = TRUE)
resam<-matrix(sam,nrow = B, ncol = nh)
meds<- apply(resam,1,median)
median(fh)-meds
median(meds)-median(fh)
sd(meds)
sd(resampledMeans)
sd(resampledMedians)
quantile(resampledMeans,c(.025,.975))
quantile(resampledMedians,c(.025,.975))
quantile(meds,c(.025,.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
Bcounts
BCounts
BCcounts
group
testStat()
testStat
testStat(BCcounts,group)
obs <- testStat(BCcounts,group)
obs
mean
mean(Bdata$count-Cdata$count)
sample(group)
perms<-sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms)>obs
perms>obs
mean(perms>obs)
testStat(DEcounts,group)
perms<-sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
power.t.test(n = 100,delta = .01,sd = .04,alternative = "one.sided",type = "one.sample")
power.t.test(power = .90,delta = .01,sd = .04,alternative = "one.sided",type = "one.sample")
data(mtcars)
names(mtcars)
fit<- lm(mpg~wt+factor(cyl), mtcars)
summary(fit)
names(mtcars)
mtcars$cyl2 <- relevel(mtcars$cyl, "8")
mtcars$cyl2 <- relevel(mtcars$cyl, 8)
head(mtcars)
mtcars$cyl2 <- relevel(factor(mtcars$cyl), "8")
head(mtcars)
mtcars$cyl2
fit<- lm(mpg~wt+factor(cyl2), mtcars)
summary(fit)
fit2<- lm(mpg ~ factor(cyl2), mtcars)
summary(fit2)
fit3<- lm(mpg ~ factor(cyl2)*wt, mtcars)
summary(fit3)
anova(fit,fit3)
fit4<- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
hatvalues(lm(x~y))
hatvalues(lm(y~x))
rm(list = ls())
install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
install.packages("devtools")
install.packages("devtools")
library(swirl)
swirl()
all<-lm(Fertility~.,swiss)
summary(all)
summary(lm(Fertility~Agriculture, swiss))
cor(swiss$Education,swiss$Examination)
cor(swiss$Education,swiss$Agriculture)
makelms()
ec<- swiss$Examination+swiss$Catholic
efit<- lm(swiss$Fertility~ec)
efit <- lm(Fertility ~ . + ec, swiss)
coef(all)-coef(efit)
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays,15)
SE
sE
summary(InsectSprays[,2])
sapply(InsectSprays, class)
fit<-lm(count~.,InsectSprays)
summary(fit)
summary(fit)$coef
est<- summary(fit)$coef[,1]
mean(sx)
mean(sA)
mean(sB)
nfit<-lm(count~.-1,InsectSprays)
coef(nfit)
summary(nfit)$coe
summary(nfit)$coef
spary2<- relevel(InsectSprays$spray, "C")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C")
fit2<- lm(InsectSprays$count ~ spray2 )
summary(fit2)$coef
mean(sC)
sprayC coefficient (fit$coef[3])-sprayB's
| (fit$coef[2])
fit$coef[3]-fit$coef[2]
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
colnames(hunger)
names(hunger)
fit<- lm(Numeric~Year,hunger)
summary(fit)$coef
lmF<- lm(Numeric[hunger$sex=="Female"],Year,hunger)
lmF<- lm(Numeric[hunger$sex=="Female"]~Year,hunger)
summary(fit)$coef
lmF <- lm(Numeric[Sex=="Female"] ~Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~Year[Sex=="Male"],hunger)
lmBoth<- lm(Numeric~ Year+Sex, hunger)
summary(lmBoth)
lmInter<- lm(Numeric~Year+Sex+(Sex*Year),hunger)
summary(lmInter)
fit<- lm(y~x,out2)
plot(fit, which = 1)
fitno<- lm(y~x,out2[-1,])
plot(fitno, which = 1)
coef(fit)-coef(fitno)
head(dbeta(fit))
head(dfbeta(fit))
resno<- out2[1,"y"]- predict(fitno,out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma<-deviance(fit)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd<- sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit,which =3)
plot(fit,which =2)
plot(fit,which =2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
head(rstudent(fit))
dy <- predict(fitno, out2)-predict(fit, out2)
dy <- predict(fitno, out2)-predict(fit, out2)
sum(dy^2)/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
library(MASS)
data("shuttle")
head(shuttle)
str(shuttle)
fit <- glm(use~wind,family ="binomial" , data = shuttle)
summary(fit)
winds2 < - relevel(shuttle$wind , "tail")
shuttle$winds2 < - relevel(shuttle$wind , "tail")
shuttle$winds2 <- relevel(shuttle$wind , "tail")
fit <- glm(use~wind2,family ="binomial" , data = shuttle)
shuttle$winds2 <- relevel(shuttle$wind , "tail")
fit <- glm(use~wind2,family ="binomial" , data = shuttle)
fit <- glm(use~winds2,family ="binomial" , data = shuttle)
summary(fit)
fit <- glm(use~winds2+magn,family ="binomial" , data = shuttle)
summary(fit)
fit <- glm(I(1-use)~winds2,family ="binomial" , data = shuttle)
reverse_use<- 1- factor(shuttle$use)
reverse_use<- 1- as.numeric(factor(shuttle$use))
fit <- glm(I(1 - as.numeric(use))~winds2,family ="binomial" , data = shuttle)
fit <- glm(I(reverse_use)~winds2,family ="binomial" , data = shuttle)
reverse_use
as.numeric(shuttle$use)
library(dplyr)
reverse_use <- shuttle$use %>%
scs
reverse_use <- shuttle$use %>%
reverse_use <- shuttle$use %>%
scs
reverse_use <- shuttle$use %>%
mutate(use = ifelse(use == 1 , 1, 0))
data("InsectSprays")
str(InsectSprays)
fit < -glm(count~. , data=InsectSprays, family = "Poisson")
fit < -glm(count~. , data=InsectSprays, family = "poisson")
fit < -glm(count~spray , data=InsectSprays, family = "poisson")
fit < -glm(spray~count , data=InsectSprays, family = "poisson")
data("shuttle")
shuttle <- mutate(use = relevel(use , "noauto"))
shuttle <- mutate(shuttle,use = relevel(use , "noauto"))
str(shuttle)
shuttle$use.bin <- as.integer(shuttle$use) -1
head(shuttle)
glm(use.bin~wind-1 , family = "binomial",data = shuttle)
fit<-glm(use.bin~wind-1 , family = "binomial",data = shuttle)
exp(coef(fit))
1.2857/1.3272
fit<-glm(use.bin~wind+ magn -1 , family = "binomial",data = shuttle)
exp(coef(fit))
1.438/1.485
fit<-glm(use.bin~wind , family = "binomial",data = shuttle)
coef(fit)
exp(0.03181183)
shuttle <- mutate(shuttle,wind = relevel(wind , "tail"))
fit<-glm(use.bin~wind , family = "binomial",data = shuttle)
coef(fit)
exp(-0.0318)
fit<-glm(1-use.bin~wind -1 , family = "binomial",data = shuttle)
coef(fit)
data("InsectSprays")
fit3 <- glm(count ~ spray , family = "poisson", data = InsectSprays)
coef(fit3)
fit3 <- glm(count ~ spray-1 , family = "poisson", data = InsectSprays)
coef_fit3 <- coef(fit3)
coef_fit3[1]/coef_fit3[2]
coef_fit3 <- exp(coef(fit3))
coef_fit3[[1]]/coef_fit3][2]]
coef_fit3[[1]]/coef_fit3[[2]]
exp(coef_fit3[1]/coef_fit3[2])
coef_fit3[1]
coef_fit3 <- coef(fit3)
coef_fit3[1]
coef_fit3[2]
coef_fit3[[1]]
library(swirl)
swirl()
rgp1()
rgp2()
head(swiss)
md1<-lm(Fertility ~. , data = swiss)
mdl<-lm(Fertility ~. , data = swiss)
vif(mdl)
mdl1<-lm(Fertility ~ Agriculture + Education+ Catholic +Infant.Mortality   , data = swiss)
mdl2<-lm(Fertility ~ . -Examination, swiss)
vif(mdl2)
x1c<- simbias()
play()
head(x1c)
nxt()
apply(x1c, 1, mean)
fit1<- lm( formula = Fertility~Agriculture,data = swiss)
fit1<- lm( formula = Fertility~Agriculture+ Examination+Education,data = swiss)
fit3<- lm( formula = Fertility~Agriculture+ Examination+Education,data = swiss)
anova(fit1,fit3)
deviance(fit3)
d<- deviance(fit3)/43
n<- deviance(fit1)- deviance(fit3)
n<- deviance(fit1)- deviance(fit3)/2
n<- (deviance(fit1)- deviance(fit3))/2
d
n/d
pf(n/d, 2,43, lower.tail = FALSE)
shapiro.test(fi3$residuals)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
head(ravenData)
ravenData
mdl<- glm( ravenWinNum ~ ravenScore , family = "binomial", data= ravenData)
predict(mdl, data.frame(ravenScore = c(0,3,6)))
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
play()
nxt()
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000,50))
nxt()
head(hits)
head(hits$date)
class(hits$date)
as.integer(head(hitd$date))
as.integer(head(hits$date))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 'date'))
which.max(hits$visits)
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95,lambda)
mdl2<- glm(simplystats~date, offset = log(visits+1), data =hits)
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset= log(visits + 1))
qpois(.95,mdl2$fitted.values[704])
data("mtcars")
head(mtcars)
mdl<- lm(mpg~disp, data = mtcars)
cor(mtcars$disp, mtcars$mpg)
r<-cor(mtcars$disp, mtcars$mpg)
r^2
summary(mdl)
setwd("D:\RProjects\DataScience_R_jhonhopkins\Pratical Machine Learning")
setwd("D:/RProjects/DataScience_R_jhonhopkins/Pratical Machine Learning")
install.packages(c("corrplot", "Rmisc"))
